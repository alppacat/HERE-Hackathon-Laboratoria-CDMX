{"version":3,"sources":["assets/aa.png","config/firebase.js","components/Button.jsx","components/Home.jsx","components/Calendar.jsx","config/urls.js","components/Geolocation.jsx","components/SignIn.jsx","components/AddNewR.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","initSesion","email","password","signInWithEmailAndPassword","then","res","console","log","catch","error","errorCode","code","errorMessage","message","logout","signOut","concat","ButtonA","props","react_default","a","createElement","Fragment","className","onClick","Home","lib","trigger","options","closeOnClick","divider","waves","href","Button","classname","Calendar","id","type","step","fetchGeocode","number","street","cp","newWaypoint","latB","lngB","Geolocation","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","offSesion","state","value","url","_this2","navigator","geolocation","getCurrentPosition","position","latA","lngA","coords","latitude","longitude","setState","src","alt","Component","SignIn","signIn","u","user","current","login","React","createRef","Imagen","placeholder","ref","AddNewRute","fetchGeo","urlFetch","fetch","resp","json","result","Response","View","Result","Location","DisplayPosition","Latitude","Longitude","App","onSesion","uid","onAuthStateChanged","components_Home","components_Geolocation","components_Calendar","AddNewR","components_SignIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6da0e2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aa.acf77f81.png\";","import firebase from 'firebase'; \r\n\r\nconst firebaseCredentials = {\r\n    apiKey: \"AIzaSyCB9127rzCO2-_faUKn0_Gl2YnHa_kAgiI\",\r\n    authDomain: \"hackathon-here-laboratoriacdmx.firebaseapp.com\",\r\n    databaseURL: \"https://hackathon-here-laboratoriacdmx.firebaseio.com\",\r\n    projectId: \"hackathon-here-laboratoriacdmx\",\r\n    storageBucket: \"hackathon-here-laboratoriacdmx.appspot.com\",\r\n    messagingSenderId: \"906777205290\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseCredentials);\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;\r\n\r\nexport const initSesion = (email, password) => {\r\n\tauth.signInWithEmailAndPassword(email, password)\r\n\t\t.then((res) => { \r\n\t\t\tconsole.log('logueado ' + res);\r\n\t\t\treturn})\r\n\t\t.catch((error) => {\r\n\t\t\t// Handle Errors here.\r\n\t\t\tconst errorCode = error.code;\r\n\t\t\tconst errorMessage = error.message;\r\n\t\t\tconsole.log(errorCode, errorMessage);\r\n\t\t});\r\n    \r\n};\r\n\r\nexport const logout = () => {\r\n\tauth.signOut().then(() => {\r\n\t\tconsole.log('Desconectado')\r\n\t\treturn\r\n\t})\r\n\t.catch((error) => console.log(`Error: ${error.code}: ${error.message}`));\t\r\n};","import React from 'react';\r\n\r\nconst ButtonA = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button className=\"btn\" onClick={props.logout} >Cerrar sesi√≥n</button>\r\n        </React.Fragment>   \r\n    );\r\n}\r\n\r\nexport default ButtonA;\r\n","import React from \"react\";\r\nimport { SideNav, SideNavItem, Icon } from \"react-materialize\";\r\nimport { logout } from '../config/firebase';\r\nimport ButtonA from './Button';\r\n\r\n\r\nconst Home = () => {\r\n    const offSesion = () =>{\r\n        logout()\r\n    }\r\n  return (\r\n    <nav className='btn margin-bottom'>\r\n      <SideNav className=\"menu\"\r\n        trigger={\r\n        <a className=\"left-align\"><Icon>dehaze</Icon></a>\r\n      }\r\n        options={{ closeOnClick: true }}\r\n      >\r\n        <SideNavItem/>\r\n        <SideNavItem><Icon>person</Icon>Perfil</SideNavItem>\r\n        <SideNavItem><Icon>notifications</Icon>Notificaciones</SideNavItem>\r\n        <SideNavItem divider />\r\n        <SideNavItem waves href=\"#!third\">\r\n        <ButtonA classname=\"btn\" logout={offSesion}/>\r\n        </SideNavItem>\r\n      </SideNav> \r\n    </nav>\r\n\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Calendar = () => {\r\n\treturn (\r\n\t\t<section id=\"calendar\">\r\n\t\t<p>Nuevo punto de encuentro</p>\r\n\t\t\t<input type=\"date\" step=\"1\" />\r\n\t\t\t{/* <button className='btn-floating btn-large waves-effect waves-light red'><i className=\"material-icons\">add</i></button> */}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Calendar;","export \tconst UrlRutes = (latA, lngA) => {\r\n\tconst url= `https://image.maps.api.here.com/mia/1.6/routing?app_id=F2NFi480TAeaCU2fjGmC&app_code=DvU41ZrLHlIVBDtOruPEqg&waypoint0=${latA},${lngA}&waypoint1=19.451,-99.166&poix0=${latA},${lngA};00a3f2;00a3f2;11;.&poix1=19.451,-99.166;white;white;11;.&lc=1652B4&lw=6&t=0&ppi=320&w=250&h=300`;\r\n\r\n\treturn url;\r\n}\r\n\r\nexport const fetchGeocode = (number,street,cp) => {\r\n\tconst urlGeocode = `https://geocoder.api.here.com/6.2/geocode.json?app_id=F2NFi480TAeaCU2fjGmC&app_code=DvU41ZrLHlIVBDtOruPEqg&searchtext=${number}+${street}+${cp}+mexico+city`;\r\n\r\n\treturn urlGeocode;\r\n};\r\n\r\nexport const newWaypoint = (latB, lngB) => {\r\n\tconst urlNewWaypoint = `https://image.maps.api.here.com/mia/1.6/mapview?app_id=F2NFi480TAeaCU2fjGmC&app_code=DvU41ZrLHlIVBDtOruPEqg&lat=${latB}&lon=${lngB}&vt=0&z=14&w=250&h=300`;\r\n\treturn urlNewWaypoint;\r\n}","import React, {Component} from 'react';\r\nimport { logout } from '../config/firebase';\r\n\r\nimport { UrlRutes } from '../config/urls';\r\nimport Button from './Button';\r\n\r\n\r\nclass Geolocation extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tvalue: '0,0',\r\n\t\t\terror: null,\r\n\t\t\turl: null\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\t(position) => {\r\n\t\t\t\t\tconst url = UrlRutes(position.coords.latitude, position.coords.longitude);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\turl,\r\n\t\t\t\t\t\tvalue: position.coords.latitude + ',' + position.coords.longitude,\r\n\t\t\t\t\t\terror: null,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\t(error) => this.setState(\r\n\t\t\t\t\t{error: error.message}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// changeLocation (event) {\r\n\t// \tthis.setState({\r\n\t// \t\tvalue: event.target.value\r\n\t// \t})\r\n\t// }\r\n\t\r\n\toffSesion = () => {\r\n\t\tlogout();\r\n\t\t\r\n\t  }\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{/* <Button logout={this.offSesion}/> */}\r\n\t\t\t\t{/* <input className='input-geo' value={this.state.value} onChange={event=>this.changeLocation(event)}/> */}\r\n\t\t\t\t<img src = {this.state.url} alt='map'/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n}\r\nexport default Geolocation;","import React, { Component } from \"react\";\r\nimport { Button } from \"react-materialize\";\r\nimport Imagen from \"../assets/aa.png\";\r\n// import {Link} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.user = React.createRef();\r\n    this.password = React.createRef();\r\n  }\r\n\r\n  signIn = () => {\r\n\t\tconst u = {\r\n\t\t\tuser:this.user.current.value,\r\n\t\t\tpassword:this.password.current.value\r\n    };\r\n\t\tthis.props.login(u.user, u.password);\r\n\t};\r\n\r\n  render() {\r\n    const { user, password } = this;\r\n    return (\r\n      <section className=\"login-section\">\r\n        <img className=\"school\" src={Imagen} alt = 'school-logo'/>\r\n        <div className=\"form\">\r\n          <input className=\"col s3 offset-s1\" type=\"email\" placeholder=\"Email\" ref = {user}/>\r\n          <input className=\"col s3\" type=\"password\" placeholder=\"password\" ref = {password}/>\r\n          <Button waves=\"light\"onClick={this.signIn}>\r\n            Login\r\n          </Button>\r\n          <p>¬øOlvidaste tu contrase√±a?</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SignIn;\r\n","import React, {Component} from 'react';\r\nimport {fetchGeocode, newWaypoint} from '../config/urls';\r\n\r\n\r\nclass AddNewRute extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\turl: null\r\n\t\t}\r\n    this.street = React.createRef();\r\n\t\tthis.number = React.createRef();\r\n    this.cp = React.createRef();\r\n\t\t\r\n  }\r\n\r\n\tfetchGeo = () => {\r\n\t\tconst street =this.street.current.value;\r\n\t\tconst number =this.number.current.value;\r\n\t\tconst cp =this.cp.current.value;\r\n\t\tconst urlFetch = fetchGeocode(street, number, cp);\r\n\t\tfetch(urlFetch)\r\n\t\t.then(resp => resp.json())\r\n\t\t.then((result) => {\r\n\t\t\tconst latB = result.Response.View[0].Result[0].Location.DisplayPosition.Latitude;\r\n\t\t\tconst lngB = result.Response.View[0].Result[0].Location.DisplayPosition.Longitude;\r\n\t\t\tconst url= newWaypoint(latB, lngB);\r\n\t\t\tthis.setState({\r\n\t\t\t\turl\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst { street, number,cp } = this;\r\n\t\treturn (\r\n\t\t\t<section id=\"newRoute\">\r\n\t\t\t\t<input type=\"text\" placeholder=\"calle\" ref = {street}/>\r\n\t\t\t\t<input type=\"text\" placeholder=\"numero\" ref = {number}/>\r\n\t\t\t\t<input type=\"text\" placeholder=\"CP\" ref = {cp}/>\r\n\t\t\t\t<button onClick={this.fetchGeo} className='btn-floating btn-large waves-effect waves-light red'><i className=\"material-icons\">add</i></button>\r\n\r\n\t\t\t\t{/* <button onClick={this.fetchGeo}>fetch</button> */}\r\n\t\t\t\t<img src = {this.state.url} alt = 'Nueva punto de partida'/>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddNewRute;","import React, { Component } from 'react';\r\n\r\nimport { initSesion, auth } from './config/firebase';\r\n\r\nimport Home from './components/Home'; \r\nimport Calendar from './components/Calendar';\r\nimport Geolocation from './components/Geolocation';\r\nimport SignIn from './components/SignIn';\r\nimport AddNewRute from './components/AddNewR';\r\n\r\nimport './App.css';\r\n//import Button from './components/Button';\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t  uid: null,\r\n\t\t}\r\n\t}\r\n\r\n  componentWillMount () {\r\n    auth.onAuthStateChanged(user => {\r\n\t\t\t// console.log(user.uid);\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n    })\r\n  }\r\n  onSesion = (email, password) => {\r\n    initSesion(email, password);\r\n  };\r\n\r\n  render() {\r\n    const {uid} = this.state;\r\n    if(uid) {\r\n      return (\r\n        <div className=\"App\">\r\n        <Home/>\r\n          <Geolocation/>\r\n          <Calendar/>\r\n          <AddNewRute/>          \r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n      <div className=\"App\">\r\n        <SignIn login= {this.onSesion}/>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}